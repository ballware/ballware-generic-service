name: Analyse SonarQube Latest

on:
  push:
    branches: ['main', 'develop']
  pull_request:
    branches: ['main', 'develop']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sonarqube:
    runs-on: ubuntu-latest    
    services:
      azuresql:
        image: mcr.microsoft.com/azure-sql-edge
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: 1
          MSSQL_SA_PASSWORD: ${{ secrets.TEST_TENANT_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with: 
          dotnet-version: 
            8.0          
      - name: Wait for database to start
        run: |
          sleep 30          
      - name: Detect database container id
        run: |
          SQLEDGE_CONTAINER_ID=$(docker ps -q --filter "name=azuresql")
          echo "Container ID: $SQLEDGE_CONTAINER_ID"
          echo "SQLEDGE_CONTAINER_ID=$SQLEDGE_CONTAINER_ID" >> $GITHUB_ENV
      - name: Run database initialization script
        run: | 
          docker exec ${{ env.SQLEDGE_CONTAINER_ID }} /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${{ secrets.TEST_TENANT_PASSWORD }} -Q "CREATE DATABASE tenant;"
      - name: Install SonarQube
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Install reportgenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
      - name: Start SonarQube scan
        run: dotnet sonarscanner begin /k:"ballware_ballware-generic-service" /o:"ballware" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.lcov.reportsPaths="CoverageReport/lcov.info"
      - name: Build solution for SonarQube
        run: dotnet build ballware-generic-service.sln --no-incremental
      - name: Run tests with coverage report        
        run: dotnet test ballware-generic-service.sln -p:CollectCoverage=true -p:CoverletOutputFormat=lcov -p:CoverletOutput=./TestResults/coverage.info --environment ConnectionStrings__TenantConnection='${{ secrets.TEST_TENANT_CONNECTIONSTRING }}'
      - name: Merge coverage reports
        run: reportgenerator -reports:"test/**/TestResults/coverage.info" -targetdir:CoverageReport -reporttypes:lcov
      - name: End SonarQube scan
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}" 
